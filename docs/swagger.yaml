definitions:
  dto.AssignMissionRequest:
    properties:
      catId:
        type: integer
    type: object
  dto.CatResponse:
    properties:
      breed:
        type: string
      id:
        type: integer
      name:
        type: string
      salary:
        type: number
      years_experience:
        type: integer
    type: object
  dto.CreateCatRequest:
    properties:
      breed:
        maxLength: 64
        minLength: 2
        type: string
      name:
        maxLength: 64
        minLength: 2
        type: string
      salary:
        maximum: 1000000
        minimum: 0
        type: number
      years_experience:
        maximum: 60
        minimum: 0
        type: integer
    required:
    - breed
    - name
    type: object
  dto.CreateCatResponse:
    properties:
      id:
        type: integer
    type: object
  dto.CreateGoalRequest:
    properties:
      country:
        type: string
      name:
        maxLength: 64
        minLength: 2
        type: string
      notes:
        maxLength: 1000
        type: string
    required:
    - country
    - name
    type: object
  dto.CreateMissionRequest:
    properties:
      description:
        type: string
      goals:
        items:
          $ref: '#/definitions/dto.CreateGoalRequest'
        type: array
      status:
        enum:
        - planned
        - active
        - completed
        type: string
      title:
        maxLength: 128
        minLength: 3
        type: string
    required:
    - title
    type: object
  dto.CreateMissionResponse:
    properties:
      id:
        type: integer
    type: object
  dto.DeleteCatResponse:
    properties:
      deleted:
        type: boolean
      id:
        type: integer
    type: object
  dto.ErrorResponse:
    properties:
      code:
        example: INVALID_INPUT
        type: string
      details: {}
      message:
        example: validation error
        type: string
    type: object
  dto.GetCatsResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.CatResponse'
        type: array
      limit:
        type: integer
      next_offset:
        type: integer
      offset:
        type: integer
    type: object
  dto.GetMissionsResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.MissionListItem'
        type: array
      limit:
        type: integer
      offset:
        type: integer
      total:
        type: integer
    type: object
  dto.GoalResponse:
    properties:
      country:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      notes:
        type: string
      status:
        type: string
      updatedAt:
        type: string
    type: object
  dto.MissionListItem:
    properties:
      catId:
        type: integer
      createdAt:
        type: string
      id:
        type: integer
      status:
        type: string
      title:
        type: string
    type: object
  dto.MissionResponse:
    properties:
      catId:
        type: integer
      createdAt:
        type: string
      description:
        type: string
      goals:
        items:
          $ref: '#/definitions/dto.GoalResponse'
        type: array
      id:
        type: integer
      status:
        type: string
      title:
        type: string
      updatedAt:
        type: string
    type: object
  dto.UpdateMissionStatusRequest:
    properties:
      status:
        enum:
        - planned
        - active
        - completed
        type: string
    required:
    - status
    type: object
  dto.UpdateSalaryRequest:
    properties:
      salary:
        maximum: 1000000
        minimum: 0
        type: number
    required:
    - salary
    type: object
info:
  contact: {}
paths:
  /cats:
    get:
      description: ability to view the list of cats
      parameters:
      - description: Limit
        in: query
        maximum: 200
        minimum: 1
        name: limit
        type: integer
      - description: Offset
        in: query
        minimum: 0
        name: offset
        type: integer
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by breed
        in: query
        name: breed
        type: string
      - description: Min experience
        in: query
        name: min_years
        type: integer
      - description: Max experience
        in: query
        name: max_years
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GetCatsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: List spy cats
      tags:
      - cats
  /cats/{id}:
    delete:
      description: Deletes a cat by id
      parameters:
      - description: Cat ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.DeleteCatResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Delete cat
      tags:
      - cats
    get:
      description: The ability to receive information about a single cat
      parameters:
      - description: ID Cat
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CatResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get a single spy cat
      tags:
      - cats
  /cats/{id}/salary:
    patch:
      consumes:
      - application/json
      description: Updates salary for a specific cat
      parameters:
      - description: Cat ID
        in: path
        name: id
        required: true
        type: integer
      - description: New salary
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateSalaryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CatResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Update cat salary
      tags:
      - cats
  /cats/create:
    post:
      consumes:
      - application/json
      description: Used to create a new spy cat
      parameters:
      - description: Request to create a cat
        in: body
        name: CreateCatRequest
        required: true
        schema:
          $ref: '#/definitions/dto.CreateCatRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.CreateCatResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Create a new spy cat
      tags:
      - cats
  /mission/{id}:
    get:
      description: The ability to receive information about a single mission
      parameters:
      - description: ID Mission
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.MissionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get a single mission
      tags:
      - missions
  /missions:
    get:
      parameters:
      - description: planned|active|completed
        in: query
        name: status
        type: string
      - description: Cat ID
        in: query
        name: catId
        type: integer
      - description: search by title
        in: query
        name: q
        type: string
      - description: limit (1..200)
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GetMissionsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: List missions
      tags:
      - missions
    post:
      consumes:
      - application/json
      description: Used to create a new mission
      parameters:
      - description: Request to create a mission
        in: body
        name: CreateMissionRequest
        required: true
        schema:
          $ref: '#/definitions/dto.CreateMissionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.CreateMissionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Create a new mission
      tags:
      - missions
  /missions/{id}/assign:
    patch:
      consumes:
      - application/json
      description: Used to link or unlink a mission with a cat
      parameters:
      - description: Mission ID
        in: path
        name: id
        required: true
        type: integer
      - description: Assignment payload
        in: body
        name: AssignMissionRequest
        required: true
        schema:
          $ref: '#/definitions/dto.AssignMissionRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Assign mission to a cat (or unassign with null)
      tags:
      - missions
  /missions/{id}/status:
    patch:
      consumes:
      - application/json
      parameters:
      - description: Mission ID
        in: path
        name: id
        required: true
        type: integer
      - description: new status
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateMissionStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.MissionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Update mission status
      tags:
      - missions
swagger: "2.0"
